import { SEARCH_URL } from "../../state/state.js";
import Toast from "../../components/ui/Toast.mjs";

// Function to display the search section
async function displaySearch(isLoggedIn, searchsec) {
    const srchsec = document.createElement("div");
    srchsec.id = "srch";
    searchsec.appendChild(srchsec);
    displaySearchForm(srchsec);
}

// Function to display search form and filters
async function displaySearchForm(container) {
    const searchContainer = document.createElement("div");
    searchContainer.classList.add("search-container");

    // Heading
    const heading = document.createElement("h1");
    heading.textContent = "Find Events, Businesses, Places & People";
    searchContainer.appendChild(heading);

    // Search input
    const searchInput = document.createElement("input");
    searchInput.id = "search-query";
    searchInput.placeholder = "Search by name, keyword, or category...";
    searchInput.required = true;
    searchContainer.appendChild(searchInput);

    // Filters Section
    const filters = document.createElement("div");
    filters.id = "filters";

    // Search Type Filter
    const searchTypeFilter = document.createElement("select");
    searchTypeFilter.id = "search-type-filter";
    searchTypeFilter.innerHTML = `
        <option value="">Select Type</option>
        <option value="events">Events</option>
        <option value="places">Places</option>
        <option value="businesses">Businesses</option>
        <option value="people">People</option>
    `;
    filters.appendChild(searchTypeFilter);

    // Location Filter
    const locationFilter = document.createElement("input");
    locationFilter.type = "text";
    locationFilter.id = "location-filter";
    locationFilter.placeholder = "Enter location...";
    filters.appendChild(locationFilter);

    // Category Filter
    const categoryFilter = document.createElement("select");
    categoryFilter.id = "category-filter";
    categoryFilter.innerHTML = `
        <option value="">Select Category</option>
        <option value="music">Music</option>
        <option value="sports">Sports</option>
        <option value="tech">Tech</option>
        <option value="food">Food</option>
    `;
    filters.appendChild(categoryFilter);

    // Date Filter (Only for Events)
    const dateFilter = document.createElement("input");
    dateFilter.type = "date";
    dateFilter.id = "date-filter";
    dateFilter.placeholder = "Select Date";
    filters.appendChild(dateFilter);

    // Apply Filters Button
    const applyFiltersButton = document.createElement("button");
    applyFiltersButton.id = "apply-filters";
    applyFiltersButton.textContent = "Search";
    filters.appendChild(applyFiltersButton);

    searchContainer.appendChild(filters);

    // Loading Indicator
    const loadingIndicator = document.createElement("p");
    loadingIndicator.id = "loading";
    loadingIndicator.textContent = "Searching...";
    loadingIndicator.style.display = "none";
    searchContainer.appendChild(loadingIndicator);

    // Search Results Container
    const searchResultsContainer = document.createElement("div");
    searchResultsContainer.id = "search-results";
    searchContainer.appendChild(searchResultsContainer);

    container.appendChild(searchContainer);

    initializeSearchListeners();
}

// Function to initialize event listeners
function initializeSearchListeners() {
    const searchInput = document.getElementById("search-query");
    const searchTypeFilter = document.getElementById("search-type-filter");
    const locationFilter = document.getElementById("location-filter");
    const categoryFilter = document.getElementById("category-filter");
    const dateFilter = document.getElementById("date-filter");
    const applyFiltersButton = document.getElementById("apply-filters");
    const searchResultsContainer = document.getElementById("search-results");
    const loadingIndicator = document.getElementById("loading");

    // Validate inputs
    function validateInputs() {
        let isValid = true;

        if (!searchInput.value.trim()) {
            isValid = false;
            searchInput.classList.add("error");
        } else {
            searchInput.classList.remove("error");
        }

        if (!searchTypeFilter.value) {
            isValid = false;
            searchTypeFilter.classList.add("error");
        } else {
            searchTypeFilter.classList.remove("error");
        }

        return isValid;
    }

    // Dummy data for testing if API is not available
    const dummyData = [
        {
            name: "Tech Conference 2025",
            type: "events",
            location: "New Delhi",
            category: "tech",
            price: 50,
            date: "2025-04-15",
            description: "An annual tech conference featuring AI, ML, and Web3."
        },
        {
            name: "Sunset Music Festival",
            type: "events",
            location: "Goa",
            category: "music",
            price: 20,
            date: "2025-05-10",
            description: "A beachside music festival with top DJs and artists."
        },
        {
            name: "Bistro Cafe",
            type: "businesses",
            location: "Mumbai",
            category: "food",
            price: "Varies",
            description: "A cozy cafe known for its artisan coffee and pastries."
        }
    ];

    // Fetch search results from API or use dummy data
    async function fetchSearchResults() {
        if (!validateInputs()) {
            Toast("Please enter search query and select a type.", "error");
            return;
        }

        loadingIndicator.style.display = "block"; // Show loading text

        try {
            const queryParams = {
                query: searchInput.value,
                type: searchTypeFilter.value,
                location: locationFilter.value,
                category: categoryFilter.value,
                date: dateFilter.value,
            };
            const searchParams = new URLSearchParams(queryParams);
            let data = await apiFetch(`${SEARCH_URL}/search/${queryParams.type}?${searchParams.toString()}`);

            // If API fails or returns no data, use dummy data
            if (!data || data.length === 0) {
                Toast("No results from API. Using test data.", "warning");
                data = dummyData.filter(item => item.type === queryParams.type);
            }

            displaySearchResults(data);
        } catch (error) {
            Toast("Error fetching data. Showing dummy results.", "error");
            displaySearchResults(dummyData.filter(item => item.type === searchTypeFilter.value));
        } finally {
            loadingIndicator.style.display = "none"; // Hide loading text
        }
    }

    // Display search results
    function displaySearchResults(data) {
        searchResultsContainer.innerHTML = ""; // Clear old results

        if (data.length > 0) {
            data.forEach((item) => {
                const card = document.createElement("div");
                card.classList.add("result-card");

                const name = document.createElement("h3");
                name.textContent = item.name;
                card.appendChild(name);

                const details = document.createElement("p");
                details.innerHTML = `
                    <strong>Type:</strong> ${item.type} <br>
                    <strong>Location:</strong> ${item.location || "N/A"} <br>
                    <strong>Category:</strong> ${item.category || "N/A"} <br>
                    <strong>Date:</strong> ${item.date || "N/A"} <br>
                    <strong>Price:</strong> $${item.price || "Free"} <br>
                    <em>${item.description || ""}</em>
                `;
                card.appendChild(details);

                searchResultsContainer.appendChild(card);
            });
        } else {
            const noResults = document.createElement("p");
            noResults.textContent = "No results found. Try refining your search.";
            searchResultsContainer.appendChild(noResults);
        }
    }

    applyFiltersButton.addEventListener("click", fetchSearchResults);
}


async function apiFetch(endpoint) {
    // document.getElementById('loading').style.display = 'block';
    try {
        const response = await fetch(`${endpoint}`);
        if (response.ok) {
            const text = await response.text(); // Get response as text
            return text ? JSON.parse(text) : null; // Parse JSON if there's content
        } else {
            const errorData = await response.text(); // Get error message as text
            throw new Error(errorData || 'Unknown error');
        }
    } catch (error) {
        console.error(`Error fetching ${endpoint}:`, error);
        throw error; // Rethrow for further handling
    } finally {
        // document.getElementById('loading').style.display = 'none';
    }
}

export { displaySearch, displaySearchForm };
