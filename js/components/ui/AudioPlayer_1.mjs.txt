import "../../../css/ui/AudioPlayer.css";

function AudioPlayer(audioSrc) {
    const player = document.createElement("div");
    player.id = "audio-player-container";
  
    const img = document.createElement("img");
    img.src = audioSrc.poster;
    img.alt = "Audio Thumbnail";
    img.className = "audio-poster";
    player.appendChild(img);
  
    const audio = document.createElement("audio");
    audio.src = audioSrc.src;
    audio.controls = false; 
    player.appendChild(audio);
  
    const playButton = document.createElement("button");
    playButton.textContent = "Play";
    playButton.onclick = function () {
      if (audio.paused) {
        audio.play();
        playButton.textContent = "Pause";
      } else {
        audio.pause();
        playButton.textContent = "Play";
      }
    };
    player.appendChild(playButton);
  
    // **Lyrics Container**
    const lyricsContainer = document.createElement("div");
    lyricsContainer.id = "lyrics-container";
    player.appendChild(lyricsContainer);
  
    audioSrc.lyricsData.forEach(lyric => {
      const lyricElement = document.createElement("p");
      lyricElement.textContent = lyric.text;
      lyricElement.dataset.time = lyric.time;
      lyricsContainer.appendChild(lyricElement);
    });
  
    // **Lyrics Syncing Logic**
    function updateLyrics() {
      const currentTime = audio.currentTime;
      const lyricsElements = lyricsContainer.querySelectorAll("p");
      
      lyricsElements.forEach((lyricElement) => {
        const time = parseFloat(lyricElement.dataset.time);
        if (currentTime >= time) {
          lyricsElements.forEach(el => el.classList.remove("active"));
          lyricElement.classList.add("active");
        }
      });
  
      // Scroll to the active lyric
      const activeLyric = lyricsContainer.querySelector(".active");
      if (activeLyric) {
        activeLyric.scrollIntoView({ behavior: "smooth", block: "center" });
      }
    }
  
    audio.addEventListener("timeupdate", updateLyrics);
  
    return player;
  }
  
  export default AudioPlayer;
  