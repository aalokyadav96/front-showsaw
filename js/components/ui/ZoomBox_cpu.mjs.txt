const ZoomBox = (images, initialIndex = 0) => {
  const lightbox = document.createElement('div');
  lightbox.className = 'lightbox-overlay';

  // Create the lightbox content
  const content = document.createElement('div');
  content.className = 'lightbox-content';

  // Create the image element
  const img = document.createElement('img');
  img.src = images[initialIndex];
  img.alt = 'ZoomBox Image';
  content.appendChild(img);

  let zoomLevel = 1; // Initial zoom level
  let currentIndex = initialIndex;

  // Function to update the image source
  const updateImage = (index) => {
    img.src = images[index];
  };

  // Mouse wheel zoom handler
  const onWheel = (event) => {
    event.preventDefault();
    const delta = event.deltaY > 0 ? -0.1 : 0.1; // Scroll down = zoom out, scroll up = zoom in

    zoomLevel += delta;

    if (zoomLevel < 1) zoomLevel = 1; // Prevent zooming out too much
    if (zoomLevel > 3) zoomLevel = 3; // Limit zooming in

    const rect = img.getBoundingClientRect();
    const cursorX = event.clientX - rect.left;
    const cursorY = event.clientY - rect.top;

    // Update the image scale based on the cursor position
    img.style.transform = `scale(${zoomLevel})`;
    img.style.transformOrigin = `${(cursorX / rect.width) * 100}% ${(cursorY / rect.height) * 100}%`;

    // Optionally, update the position of the image to keep it centered under the cursor
  };

  // Attach mouse wheel event listener to zoom
  content.addEventListener('wheel', onWheel);

  // Create navigation buttons (optional)
  if (images.length > 1) {
    const prevButton = document.createElement('button');
    prevButton.className = 'lightbox-prev-btn';
    prevButton.textContent = 'Prev';
    const nextButton = document.createElement('button');
    nextButton.className = 'lightbox-next-btn';
    nextButton.textContent = 'Next';

    // Navigation functionality
    prevButton.addEventListener('click', () => {
      currentIndex = (currentIndex === 0) ? images.length - 1 : currentIndex - 1;
      updateImage(currentIndex);
      zoomLevel = 1; // Reset zoom on image change
    });

    nextButton.addEventListener('click', () => {
      currentIndex = (currentIndex === images.length - 1) ? 0 : currentIndex + 1;
      updateImage(currentIndex);
      zoomLevel = 1; // Reset zoom on image change
    });

    content.appendChild(prevButton);
    content.appendChild(nextButton);
  }

  // Add close button
  const closeButton = document.createElement('button');
  closeButton.className = 'lightbox-close-btn';
  closeButton.textContent = 'Close';
  closeButton.addEventListener('click', () => {
    lightbox.remove();
  });

  // Append elements to the content
  content.appendChild(closeButton);

  // Append the content to the lightbox
  lightbox.appendChild(content);

  // Append the lightbox to the body
  document.body.appendChild(lightbox);
};

export default ZoomBox;


// const ZoomBox = (images, initialIndex = 0) => {
//   const zoomBox = document.createElement('div');
//   zoomBox.className = 'zoombox-overlay';

//   // Create the zoombox content
//   const content = document.createElement('div');
//   content.className = 'zoombox-content';

//   // Create the image element
//   const img = document.createElement('img');
//   img.src = images[initialIndex];
//   img.alt = 'ZoomBox Image';
//   img.className = 'zoombox-image';
//   content.appendChild(img);

//   // Initialize image properties
//   let currentIndex = initialIndex;
//   let zoomLevel = 1; // Starting zoom level
//   let rotateAngle = 0; // Starting rotation angle
//   let isDragging = false;
//   let startX, startY;

//   // Function to update image
//   const updateImage = (index) => {
//     img.src = images[index];
//   };

//   // Function to zoom in and out
//   const zoomImage = (zoomIn) => {
//     zoomLevel = zoomIn ? zoomLevel + 0.1 : zoomLevel - 0.1;
//     zoomLevel = Math.max(1, Math.min(3, zoomLevel)); // Zoom limits between 1x and 3x
//     img.style.transform = `scale(${zoomLevel}) rotate(${rotateAngle}deg)`;
//   };

//   // Function to rotate image
//   const rotateImage = (direction) => {
//     rotateAngle = (rotateAngle + (direction === 'left' ? -90 : 90)) % 360;
//     img.style.transform = `scale(${zoomLevel}) rotate(${rotateAngle}deg)`;
//   };

//   // Navigation buttons for next and previous images
//   const prevButton = document.createElement('button');
//   prevButton.className = 'zoombox-prev-btn';
//   prevButton.textContent = 'Prev';
//   const nextButton = document.createElement('button');
//   nextButton.className = 'zoombox-next-btn';
//   nextButton.textContent = 'Next';

//   prevButton.addEventListener('click', () => {
//     currentIndex = (currentIndex === 0) ? images.length - 1 : currentIndex - 1;
//     updateImage(currentIndex);
//     zoomLevel = 1;
//     rotateAngle = 0;
//     img.style.transform = `scale(${zoomLevel}) rotate(${rotateAngle}deg)`;
//   });

//   nextButton.addEventListener('click', () => {
//     currentIndex = (currentIndex === images.length - 1) ? 0 : currentIndex + 1;
//     updateImage(currentIndex);
//     zoomLevel = 1;
//     rotateAngle = 0;
//     img.style.transform = `scale(${zoomLevel}) rotate(${rotateAngle}deg)`;
//   });

//   content.appendChild(prevButton);
//   content.appendChild(nextButton);

//   // Fullscreen toggle button
//   const fullscreenButton = document.createElement('button');
//   fullscreenButton.className = 'zoombox-fullscreen-btn';
//   fullscreenButton.textContent = 'Fullscreen';
//   fullscreenButton.addEventListener('click', () => {
//     if (!document.fullscreenElement) {
//       zoomBox.requestFullscreen();
//     } else {
//       document.exitFullscreen();
//     }
//   });
//   content.appendChild(fullscreenButton);

//   // Close button
//   const closeButton = document.createElement('button');
//   closeButton.className = 'zoombox-close-btn';
//   closeButton.textContent = 'Close';
//   closeButton.addEventListener('click', () => {
//     zoomBox.remove();
//   });
//   content.appendChild(closeButton);

//   // Append the content to the zoombox
//   zoomBox.appendChild(content);

//   // Append the zoombox to the body or any container
//   document.body.appendChild(zoomBox);

//   // Allow dragging the image
//   img.addEventListener('mousedown', (e) => {
//     isDragging = true;
//     startX = e.clientX - img.offsetLeft;
//     startY = e.clientY - img.offsetTop;
//     document.addEventListener('mousemove', dragImage);
//     document.addEventListener('mouseup', stopDragging);
//   });

//   const dragImage = (e) => {
//     if (!isDragging) return;
//     img.style.left = `${e.clientX - startX}px`;
//     img.style.top = `${e.clientY - startY}px`;
//   };

//   const stopDragging = () => {
//     isDragging = false;
//     document.removeEventListener('mousemove', dragImage);
//     document.removeEventListener('mouseup', stopDragging);
//   };

//   // Mouse wheel zooming
//   zoomBox.addEventListener('wheel', (e) => {
//     e.preventDefault();
//     zoomImage(e.deltaY < 0); // Zoom in if scroll up, zoom out if scroll down
//   });

//   // Pinch-to-zoom for touch devices
//   let initialDistance = null;
//   img.addEventListener('touchstart', (e) => {
//     if (e.touches.length === 2) {
//       initialDistance = Math.hypot(e.touches[0].clientX - e.touches[1].clientX, e.touches[0].clientY - e.touches[1].clientY);
//     }
//   });

//   img.addEventListener('touchmove', (e) => {
//     if (e.touches.length === 2 && initialDistance) {
//       const currentDistance = Math.hypot(e.touches[0].clientX - e.touches[1].clientX, e.touches[0].clientY - e.touches[1].clientY);
//       if (currentDistance > initialDistance) {
//         zoomImage(true); // Zoom in
//       } else if (currentDistance < initialDistance) {
//         zoomImage(false); // Zoom out
//       }
//       initialDistance = currentDistance;
//     }
//   });

//   // Keyboard rotation (left and right arrow keys)
//   document.addEventListener('keydown', (e) => {
//     if (e.key === 'ArrowLeft') {
//       rotateImage('left');
//     } else if (e.key === 'ArrowRight') {
//       rotateImage('right');
//     }
//   });

//   // Reset zoom button
//   const resetButton = document.createElement('button');
//   resetButton.className = 'zoombox-reset-btn';
//   resetButton.textContent = 'Reset Zoom';
//   resetButton.addEventListener('click', () => {
//     zoomLevel = 1;
//     rotateAngle = 0;
//     img.style.transform = `scale(${zoomLevel}) rotate(${rotateAngle}deg)`;
//   });
//   content.appendChild(resetButton);

//   // Close zoombox if user clicks outside the image
//   zoomBox.addEventListener('click', (e) => {
//     if (e.target === zoomBox) {
//       zoomBox.remove();
//     }
//   });
// };

// export default ZoomBox;


// // const ZoomBox = (images, initialIndex = 0) => {
// //   const zoomBox = document.createElement('div');
// //   zoomBox.className = 'zoombox-overlay';

// //   // Create the zoombox content
// //   const content = document.createElement('div');
// //   content.className = 'zoombox-content';

// //   // Create the image element
// //   const img = document.createElement('img');
// //   img.src = images[initialIndex];
// //   img.alt = 'ZoomBox Image';
// //   content.appendChild(img);

// //   // Initialize image properties
// //   let currentIndex = initialIndex;
// //   let zoomLevel = 1; // Starting zoom level
// //   let rotateAngle = 0; // Starting rotation angle

// //   // Function to update image
// //   const updateImage = (index) => {
// //     img.src = images[index];
// //   };

// //   // Function to zoom in and out
// //   const zoomImage = (zoomIn) => {
// //     zoomLevel = zoomIn ? zoomLevel + 0.1 : zoomLevel - 0.1;
// //     zoomLevel = Math.max(1, Math.min(3, zoomLevel)); // Zoom limits between 1x and 3x
// //     img.style.transform = `scale(${zoomLevel}) rotate(${rotateAngle}deg)`;
// //   };

// //   // Function to rotate image
// //   const rotateImage = (direction) => {
// //     rotateAngle = (rotateAngle + (direction === 'left' ? -90 : 90)) % 360;
// //     img.style.transform = `scale(${zoomLevel}) rotate(${rotateAngle}deg)`;
// //   };

// //   // Navigation buttons for next and previous images
// //   const prevButton = document.createElement('button');
// //   prevButton.className = 'zoombox-prev-btn';
// //   prevButton.textContent = 'Prev';
// //   const nextButton = document.createElement('button');
// //   nextButton.className = 'zoombox-next-btn';
// //   nextButton.textContent = 'Next';

// //   prevButton.addEventListener('click', () => {
// //     currentIndex = (currentIndex === 0) ? images.length - 1 : currentIndex - 1;
// //     updateImage(currentIndex);
// //     zoomLevel = 1;
// //     rotateAngle = 0;
// //     img.style.transform = `scale(${zoomLevel}) rotate(${rotateAngle}deg)`;
// //   });

// //   nextButton.addEventListener('click', () => {
// //     currentIndex = (currentIndex === images.length - 1) ? 0 : currentIndex + 1;
// //     updateImage(currentIndex);
// //     zoomLevel = 1;
// //     rotateAngle = 0;
// //     img.style.transform = `scale(${zoomLevel}) rotate(${rotateAngle}deg)`;
// //   });

// //   content.appendChild(prevButton);
// //   content.appendChild(nextButton);

// //   // Fullscreen toggle
// //   const fullscreenButton = document.createElement('button');
// //   fullscreenButton.className = 'zoombox-fullscreen-btn';
// //   fullscreenButton.textContent = 'Fullscreen';
// //   fullscreenButton.addEventListener('click', () => {
// //     if (!document.fullscreenElement) {
// //       zoomBox.requestFullscreen();
// //     } else {
// //       document.exitFullscreen();
// //     }
// //   });
// //   content.appendChild(fullscreenButton);

// //   // Close button
// //   const closeButton = document.createElement('button');
// //   closeButton.className = 'zoombox-close-btn';
// //   closeButton.textContent = 'Close';
// //   closeButton.addEventListener('click', () => {
// //     zoomBox.remove();
// //   });

// //   content.appendChild(closeButton);

// //   // Append the content to the zoombox
// //   zoomBox.appendChild(content);

// //   // Append the zoombox to the body or any container
// //   document.body.appendChild(zoomBox);

// //   // Allow dragging the image
// //   let isDragging = false;
// //   let startX, startY;

// //   img.addEventListener('mousedown', (e) => {
// //     isDragging = true;
// //     startX = e.clientX - img.offsetLeft;
// //     startY = e.clientY - img.offsetTop;
// //     document.addEventListener('mousemove', dragImage);
// //     document.addEventListener('mouseup', stopDragging);
// //   });

// //   const dragImage = (e) => {
// //     if (!isDragging) return;
// //     img.style.left = `${e.clientX - startX}px`;
// //     img.style.top = `${e.clientY - startY}px`;
// //   };

// //   const stopDragging = () => {
// //     isDragging = false;
// //     document.removeEventListener('mousemove', dragImage);
// //     document.removeEventListener('mouseup', stopDragging);
// //   };

// //   // Mouse wheel zoom
// //   zoomBox.addEventListener('wheel', (e) => {
// //     e.preventDefault();
// //     zoomImage(e.deltaY < 0); // Zoom in if scroll up, zoom out if scroll down
// //   });

// //   // Key press rotation (left and right arrow keys)
// //   document.addEventListener('keydown', (e) => {
// //     if (e.key === 'ArrowLeft') {
// //       rotateImage('left');
// //     } else if (e.key === 'ArrowRight') {
// //       rotateImage('right');
// //     }
// //   });

// //   // Close zoombox if user clicks outside the image
// //   zoomBox.addEventListener('click', (e) => {
// //     if (e.target === zoomBox) {
// //       zoomBox.remove();
// //     }
// //   });
// // };

// // export default ZoomBox;


// // // const ZoomBox = (images, initialIndex = 0) => {
// // //   const zoombox = document.createElement('div');
// // //   zoombox.className = 'zoombox-overlay';

// // //   // Create the zoombox content
// // //   const content = document.createElement('div');
// // //   content.className = 'zoombox-content';

// // //   // Create the image element
// // //   const img = document.createElement('img');
// // //   img.src = images[initialIndex];
// // //   img.alt = 'ZoomBox Image';
// // //   img.style.transformOrigin = 'center';
// // //   img.style.transition = 'transform 0.3s ease'; // Smooth transition for zoom
// // //   content.appendChild(img);

// // //   // State variables
// // //   let currentIndex = initialIndex;
// // //   let zoomLevel = 1;
// // //   let rotation = 0;

// // //   // Function to update image
// // //   const updateImage = (index) => {
// // //     img.src = images[index];
// // //     zoomLevel = 1; // Reset zoom level when switching images
// // //     rotation = 0; // Reset rotation when switching images
// // //     img.style.transform = `scale(${zoomLevel}) rotate(${rotation}deg)`;
// // //   };

// // //   if (images.length > 1) {
// // //     // Create navigation buttons
// // //     const prevButton = document.createElement('button');
// // //     prevButton.className = 'zoombox-prev-btn';
// // //     prevButton.textContent = 'Prev';
// // //     const nextButton = document.createElement('button');
// // //     nextButton.className = 'zoombox-next-btn';
// // //     nextButton.textContent = 'Next';

// // //     // Navigate to the previous image
// // //     prevButton.addEventListener('click', () => {
// // //       currentIndex = currentIndex === 0 ? images.length - 1 : currentIndex - 1;
// // //       updateImage(currentIndex);
// // //     });

// // //     // Navigate to the next image
// // //     nextButton.addEventListener('click', () => {
// // //       currentIndex = currentIndex === images.length - 1 ? 0 : currentIndex + 1;
// // //       updateImage(currentIndex);
// // //     });

// // //     content.appendChild(prevButton);
// // //     content.appendChild(nextButton);
// // //   }

// // //   // Add close button
// // //   const closeButton = document.createElement('button');
// // //   closeButton.className = 'zoombox-close-btn';
// // //   closeButton.textContent = 'Close';
// // //   closeButton.addEventListener('click', () => {
// // //     zoombox.remove();
// // //   });

// // //   // Handle zooming on mouse wheel
// // //   img.addEventListener('wheel', (e) => {
// // //     e.preventDefault();
// // //     zoomLevel += e.deltaY * -0.01; // Adjust zoom sensitivity
// // //     zoomLevel = Math.min(Math.max(zoomLevel, 0.5), 3); // Limit zoom between 0.5x and 3x
// // //     img.style.transform = `scale(${zoomLevel}) rotate(${rotation}deg)`;
// // //   });

// // //   // Handle keypress events
// // //   document.addEventListener('keydown', (e) => {
// // //     switch (e.key) {
// // //       case 'ArrowLeft': // Navigate to previous image
// // //         if (images.length > 1) {
// // //           currentIndex = currentIndex === 0 ? images.length - 1 : currentIndex - 1;
// // //           updateImage(currentIndex);
// // //         }
// // //         break;
// // //       case 'ArrowRight': // Navigate to next image
// // //         if (images.length > 1) {
// // //           currentIndex = currentIndex === images.length - 1 ? 0 : currentIndex + 1;
// // //           updateImage(currentIndex);
// // //         }
// // //         break;
// // //       case 'r': // Rotate clockwise
// // //         rotation += 90;
// // //         img.style.transform = `scale(${zoomLevel}) rotate(${rotation}deg)`;
// // //         break;
// // //       case 'R': // Rotate counterclockwise
// // //         rotation -= 90;
// // //         img.style.transform = `scale(${zoomLevel}) rotate(${rotation}deg)`;
// // //         break;
// // //       case 'Escape': // Close the zoombox
// // //         zoombox.remove();
// // //         break;
// // //       default:
// // //         break;
// // //     }
// // //   });

// // //   // Add dragging to pan the image
// // //   let isDragging = false;
// // //   let startX, startY;

// // //   img.addEventListener('mousedown', (e) => {
// // //     isDragging = true;
// // //     startX = e.pageX - img.offsetLeft;
// // //     startY = e.pageY - img.offsetTop;
// // //     img.style.cursor = 'grabbing';
// // //   });

// // //   document.addEventListener('mousemove', (e) => {
// // //     if (isDragging) {
// // //       const x = e.pageX - startX;
// // //       const y = e.pageY - startY;
// // //       img.style.transform = `translate(${x}px, ${y}px) scale(${zoomLevel}) rotate(${rotation}deg)`;
// // //     }
// // //   });

// // //   document.addEventListener('mouseup', () => {
// // //     isDragging = false;
// // //     img.style.cursor = 'grab';
// // //   });

// // //   // Append elements to the content
// // //   content.appendChild(closeButton);

// // //   // Append the content to the zoombox
// // //   zoombox.appendChild(content);

// // //   // Append the zoombox to the body or any container
// // //   document.body.appendChild(zoombox);
// // // };

// // // export default ZoomBox;
